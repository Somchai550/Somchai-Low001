<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>เว็บวิเคราะห์โครงหน้าและแนะนำทรงผม AI</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: #f0f2f5;
            margin: 0;
            padding: 20px;
        }
        .container {
            background-color: #fff;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            text-align: center;
            max-width: 800px;
            width: 100%;
        }
        h1 { color: #333; }
        p { color: #666; }
        .input-area {
            margin: 1.5rem 0;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            align-items: center;
        }
        .input-area hr {
            width: 100%;
            border: 0;
            height: 1px;
            background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
        }
        button {
            padding: 0.75rem 1.5rem;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease;
        }
        button:hover { background-color: #0056b3; }
        .result-container {
            margin-top: 1.5rem;
            position: relative;
            min-height: 300px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            gap: 1rem;
        }
        #video, #faceCanvas {
            max-width: 100%;
            border: 1px solid #ddd;
            border-radius: 5px;
            display: none;
        }
        #loading {
            position: absolute;
            font-size: 1.2rem;
            color: #555;
            display: none;
        }
        #resultDisplay {
            margin-top: 2rem;
            text-align: left;
            display: none;
        }
        #faceShapeResult {
            font-size: 1.2rem;
            color: #007bff;
            font-weight: bold;
        }
        .hairstyle-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 1rem;
        }
        .hairstyle-item {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        .hairstyle-item img {
            max-width: 100%;
            height: auto;
            border-radius: 5px;
            margin-bottom: 5px;
        }
        .hairstyle-item p {
            font-size: 0.9rem;
            color: #555;
            margin: 5px 0 0;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>เว็บวิเคราะห์โครงหน้า AI</h1>
        
        <div class="input-area">
            <p>อัปโหลดรูปภาพของคุณ:</p>
            <input type="file" id="imageUploadStatic" accept="image/*">
            <hr>
            <p>หรือถ่ายรูปจากกล้อง:</p>
            <button id="cameraBtn">เปิดกล้องเพื่อถ่ายรูป</button>
            <video id="video" autoplay style="display:none;"></video>
            <button id="takePhotoBtn" style="display:none;">ถ่ายรูป</button>
        </div>
        
        <div class="result-container">
            <canvas id="faceCanvas" style="display:none;"></canvas>
            <div id="loading">กำลังโหลดโมเดล AI...</div>
        </div>
        
        <div id="resultDisplay" style="display:none;">
            <h3>ผลการวิเคราะห์โครงหน้า:</h3>
            <p>โครงหน้าของคุณน่าจะเป็นแบบ: <span id="faceShapeResult"></span></p>
            
            <h3>ทรงผมที่แนะนำสำหรับคุณ:</h3>
            <div id="hairstyleOptions" class="hairstyle-options">
                </div>
        </div>
    </div>
    
    <script>
        const imageUploadStatic = document.getElementById('imageUploadStatic');
        const cameraBtn = document.getElementById('cameraBtn');
        const takePhotoBtn = document.getElementById('takePhotoBtn');
        const video = document.getElementById('video');
        const faceCanvas = document.getElementById('faceCanvas');
        const loading = document.getElementById('loading');
        const resultDisplay = document.getElementById('resultDisplay');
        const faceShapeResultSpan = document.getElementById('faceShapeResult');
        const hairstyleOptionsDiv = document.getElementById('hairstyleOptions');
        const ctx = faceCanvas.getContext('2d');

        let videoStream = null;
        const MODELS_URL = 'https://somchai550.github.io/hair-ar-web/models/';

        // --- ฐานข้อมูลทรงผมที่จำลองขึ้นมา ---
        // ในระบบจริง คุณจะใช้ฐานข้อมูลขนาดใหญ่จากเซิร์ฟเวอร์
        const allHairstyles = [
            { name: "ผมยาวสไลด์", suitableFor: ["รูปไข่", "หน้ากลม", "หน้าเหลี่ยม", "หน้าเพชร"], image: "https://images.unsplash.com/photo-1542938189-9800d33b49de?w=200" },
            { name: "ทรงผมบ๊อบสั้น", suitableFor: ["หน้ากลม", "รูปไข่"], image: "https://images.unsplash.com/photo-1621602958198-4c91d4e0e620?w=200" },
            { name: "Pixie Cut", suitableFor: ["รูปไข่", "หน้ายาว"], image: "https://images.unsplash.com/photo-1565593850117-66a9d7023c34?w=200" },
            { name: "ทรงผม Wet Look", suitableFor: ["หน้ายาว", "หน้าเหลี่ยม"], image: "https://images.unsplash.com/photo-1547370802-b2d91b49e223?w=200" },
            { name: "ผมหยิกธรรมชาติ", suitableFor: ["รูปไข่", "หน้ายาว", "หน้าสามเหลี่ยม"], image: "https://images.unsplash.com/photo-1596707314545-0d046f254559?w=200" },
            { name: "ผมมัดรวบสูง", suitableFor: ["หน้าเพชร", "รูปไข่"], image: "https://images.unsplash.com/photo-1582238428286-c24741348123?w=200" },
            { name: "ผมปัดข้าง", suitableFor: ["หน้าเหลี่ยม", "หน้าสามเหลี่ยม"], image: "https://images.unsplash.com/photo-1502844883138-097587849646?w=200" },
        ];

        // --- โหลดโมเดล AI ที่จำเป็น ---
        Promise.all([
            faceapi.nets.tinyFaceDetector.loadFromUri(MODELS_URL),
            faceapi.nets.faceLandmark68Net.loadFromUri(MODELS_URL)
        ]).then(() => {
            loading.style.display = 'none';
        }).catch(err => {
            console.error('Failed to load models:', err);
            loading.innerText = 'เกิดข้อผิดพลาดในการโหลดโมเดล';
        });

        // --- จัดการการอัปโหลดไฟล์ ---
        imageUploadStatic.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (event) => {
                    const img = new Image();
                    img.src = event.target.result;
                    img.onload = () => {
                        processImage(img);
                    };
                };
                reader.readAsDataURL(file);
            }
        });

        // --- จัดการการถ่ายรูปจากกล้อง ---
        cameraBtn.addEventListener('click', () => {
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
            }
            video.style.display = 'block';
            faceCanvas.style.display = 'none';
            takePhotoBtn.style.display = 'block';

            navigator.mediaDevices.getUserMedia({ video: {} })
                .then(stream => {
                    video.srcObject = stream;
                    videoStream = stream;
                })
                .catch(err => {
                    alert("ไม่สามารถเข้าถึงกล้องได้ กรุณาตรวจสอบสิทธิ์การใช้งาน");
                });
        });

        takePhotoBtn.addEventListener('click', () => {
            if (videoStream) {
                const tempCanvas = document.createElement('canvas');
                tempCanvas.width = video.videoWidth;
                tempCanvas.height = video.videoHeight;
                const tempCtx = tempCanvas.getContext('2d');
                tempCtx.drawImage(video, 0, 0, tempCanvas.width, tempCanvas.height);
                
                const img = new Image();
                img.src = tempCanvas.toDataURL('image/jpeg');
                img.onload = () => {
                    processImage(img);
                };
                
                // หยุดกล้องหลังจากถ่ายรูป
                videoStream.getTracks().forEach(track => track.stop());
                video.style.display = 'none';
                takePhotoBtn.style.display = 'none';
            }
        });

        // --- ฟังก์ชันหลักในการประมวลผลรูปภาพ ---
        async function processImage(img) {
            loading.style.display = 'block';
            resultDisplay.style.display = 'none';
            faceCanvas.style.display = 'block';

            faceCanvas.width = img.width;
            faceCanvas.height = img.height;
            ctx.clearRect(0, 0, faceCanvas.width, faceCanvas.height);
            ctx.drawImage(img, 0, 0, faceCanvas.width, faceCanvas.height);

            try {
                const detections = await faceapi.detectSingleFace(img, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks();
                
                if (detections) {
                    const faceShape = getFaceShape(detections.landmarks);
                    faceShapeResultSpan.innerText = faceShape;

                    // แสดงผลลัพธ์และแนะนำทรงผม
                    displayHairstyles(faceShape);
                    resultDisplay.style.display = 'block';

                    // วาดจุดบนใบหน้าเพื่อความแม่นยำ
                    const resizedDetections = faceapi.resizeResults(detections, { width: img.width, height: img.height });
                    const drawBox = new faceapi.draw.DrawBox(resizedDetections.detection.box);
                    drawBox.draw(faceCanvas);
                    faceapi.draw.drawFaceLandmarks(faceCanvas, resizedDetections);
                } else {
                    alert('ไม่พบใบหน้าในรูปภาพ กรุณาลองใช้รูปอื่น');
                }
            } catch (error) {
                console.error('เกิดข้อผิดพลาดในการตรวจจับใบหน้า:', error);
                alert('เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้ง');
            } finally {
                loading.style.display = 'none';
            }
        }

        // --- ฟังก์ชันวิเคราะห์โครงหน้าอย่างแม่นยำ ---
        function getFaceShape(landmarks) {
            const positions = landmarks.positions;
            const jawline = [positions[0], positions[1], positions[2], positions[3], positions[4], positions[5], positions[6], positions[7], positions[8], positions[9], positions[10], positions[11], positions[12], positions[13], positions[14], positions[15], positions[16]];
            
            const foreheadWidth = faceapi.euclideanDistance([positions[20].x, positions[20].y], [positions[23].x, positions[23].y]) * 1.5;
            const cheekboneWidth = faceapi.euclideanDistance([positions[2].x, positions[2].y], [positions[14].x, positions[14].y]);
            const jawWidth = faceapi.euclideanDistance([positions[4].x, positions[4].y], [positions[12].x, positions[12].y]);
            const faceLength = faceapi.euclideanDistance([positions[27].x, positions[27].y], [positions[8].x, positions[8].y]);

            const ratios = {
                cheekToLength: cheekboneWidth / faceLength,
                jawToCheek: jawWidth / cheekboneWidth,
                foreheadToCheek: foreheadWidth / cheekboneWidth
            };

            if (ratios.cheekToLength > 0.9 && ratios.cheekToLength < 1.1) {
                if (ratios.jawToCheek > 0.9 && ratios.jawToCheek < 1.1) {
                    return 'หน้ากลม';
                }
                return 'หน้ารูปเพชร';
            }
            if (ratios.jawToCheek > 0.9 && ratios.jawToCheek < 1.1 && ratios.foreheadToCheek > 0.9) {
                 return 'หน้าเหลี่ยม';
            }
            if (ratios.jawToCheek < 0.8) {
                return 'รูปหัวใจ';
            }
            if (foreheadWidth > cheekboneWidth) {
                return 'หน้าสามเหลี่ยม';
            }
            if (faceLength > cheekboneWidth * 1.5) {
                return 'หน้ายาว';
            }
            return 'รูปไข่'; // หากไม่ตรงกับเงื่อนไขใดๆ ให้เป็นรูปไข่
        }

        // --- ฟังก์ชันแสดงทรงผมที่แนะนำ 5 อันดับแรก ---
        function displayHairstyles(faceShape) {
            const recommendedHairstyles = allHairstyles.filter(h => h.suitableFor.includes(faceShape));
            
            // แสดงผลลัพธ์ 5 อันดับแรก
            const top5Hairstyles = recommendedHairstyles.slice(0, 5);

            hairstyleOptionsDiv.innerHTML = ''; // ล้างข้อมูลเก่า
            if (top5Hairstyles.length > 0) {
                top5Hairstyles.forEach(hairstyle => {
                    const item = document.createElement('div');
                    item.className = 'hairstyle-item';
                    item.innerHTML = `
                        <img src="${hairstyle.image}" alt="${hairstyle.name}">
                        <p><b>${hairstyle.name}</b></p>
                    `;
                    hairstyleOptionsDiv.appendChild(item);
                });
            } else {
                hairstyleOptionsDiv.innerHTML = '<p>ไม่พบทรงผมที่เหมาะสม</p>';
            }
        }
    </script>
</body>
</html>
